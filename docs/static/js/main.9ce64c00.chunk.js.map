{"version":3,"sources":["components/Track.jsx","components/App.jsx","index.js"],"names":["Track","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","trackPace","constPace","cutPart","cutTime","trackId","cutsItemUpdate","isChangedPace","onPaceChange","bind","assertThisInitialized","TimeFormat","toS","cutChanged","distance","setState","pace","cuttime","onCutPaceChange","_this$props","id","getTrackProps","source","target","_this$props$cutsItem","cutsItem","trackIndex","paceConst","percent","cuts","isChangedTime","isChangedPaceProp","updateChangeTime","react_default","a","createElement","key","data-pace","data-cuttime","data-id","assign","style","position","height","zIndex","marginTop","backgroundColor","borderRadius","cursor","left","concat","width","fontFamily","fontSize","react_simple_timefield_default","value","onChange","Component","sliderStyle","border","railStyle","Handle","_ref","_ref$handle","handle","getHandleProps","marginLeft","textAlign","color","toFixed","Pace","formatTime","cut","fromS","Tick","_ref2","tick","count","App","updatedCutsArray","toConsumableArray","i","length","newTimeSec","parseInt","time","onCutMove","newCutTimeSec","cutsCount","distanceCuts","newTracks","handleInputChange","onTimeChange","onCutsChange","event","type","checked","name","defineProperty","parseFloat","_this$setState2","arrayCuts","push","_this2","es","rootStyle","domain","step","mode","values","onSlideEnd","_ref3","getRailProps","_ref4","handles","className","map","_ref5","tracks","_ref6","index","components_Track","_ref7","ticks","showSeconds","min","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.9ce64c00.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport TimeField from 'react-simple-timefield'\nimport TimeFormat from \"hh-mm-ss\";\n\n\n\nclass Track extends Component {\n\n    constructor(props) {\n        super();\n\n\n        this.state = {\n            trackPace: \"00:00\",\n            constPace: \"00:00\",\n            cutPart: 0,\n            cutTime: 0,\n            trackId: '',\n            cutsItemUpdate: [],\n            isChangedPace: 0,\n        };\n        this.onPaceChange = this.onPaceChange.bind(this);\n    }\n\n    onPaceChange(trackPace) {\n\n        if(TimeFormat.toS(trackPace)>0){\n            let cutChanged = this.state.trackId;\n            let cutTime = TimeFormat.toS(trackPace)*(this.state.cutPart)*this.props.distance;\n            this.setState({trackPace});\n            this.setState({cutTime});\n            this.setState({isChangedPace: 1});\n            let isChangedPaceProp = 1;\n\n            this.state.cutsItemUpdate[cutChanged] = ({\n                pace: trackPace,\n                cuttime: cutTime,\n            });\n            this.props.onCutPaceChange(cutChanged, trackPace, cutTime, isChangedPaceProp);\n\n        }\n    }\n\n\n\n  render() {\n\n      const {\n\n          props: {\n              id,\n              getTrackProps,\n              source,\n              pace,\n              target,\n              cutsItem = [],\n              trackIndex,\n          },\n      } = this;\n\n      const paceConst = this.state.constPace;\n      this.state.trackId = trackIndex;\n      this.state.cutPart = (target.percent - source.percent)/100;\n      this.state.cutsItemUpdate=this.props.cuts;\n\n      if(this.props.isChangedTime===1||this.props.isChangedPaceProp===0) {\n          this.state.constPace = pace;\n          this.state.cutTime = TimeFormat.toS(this.state.constPace) * (this.state.cutPart) * this.props.distance;\n          this.state.cutsItemUpdate[trackIndex] = ({\n              pace: this.state.constPace,\n              cuttime: this.state.cutTime,\n          });\n\n      } else if(this.props.isChangedPaceProp===1&&this.state.isChangedPace===0&&this.props.isChangedTime===0) {\n          this.state.cutTime = TimeFormat.toS(this.state.constPace) * (this.state.cutPart) * this.props.distance;\n          this.state.cutsItemUpdate[trackIndex] = ({\n              pace: paceConst,\n              cuttime: this.state.cutTime,\n          });\n          this.props.updateChangeTime(0);\n      } else if(this.props.isChangedPaceProp===1&&this.state.isChangedPace===1&&this.props.isChangedTime===0) {\n          this.state.cutTime = TimeFormat.toS(this.state.trackPace)*(this.state.cutPart)*this.props.distance;\n          this.state.cutsItemUpdate[trackIndex] = ({\n              pace: this.state.trackPace,\n              cuttime: this.state.cutTime,\n          });\n      }\n      cutsItem[trackIndex] = this.state.cutsItemUpdate[trackIndex];\n      this.props.updateChangeTime(0);\n\n      return (\n          <div key={id} data-pace={this.state.cutsItemUpdate[trackIndex].pace} data-cuttime={this.state.cutsItemUpdate[trackIndex].cuttime} data-id={trackIndex}>\n              <div\n                  style={{\n                      position: 'absolute',\n                      height: 10,\n                      zIndex: 1,\n                      marginTop: 35,\n                      backgroundColor: '#546C91',\n                      borderRadius: 5,\n                      cursor: 'pointer',\n                      left: `${source.percent}%`,\n                      width: `${target.percent - source.percent}%`,\n                  }}\n                  {...getTrackProps()} // this will set up events if you want it to be clickeable (optional)\n              >\n\n\n              </div>\n              <div style={{ fontFamily: 'Roboto', fontSize: 11, marginTop:0, left: `${source.percent+1}%`, position: 'absolute' }} >\n\n                  <TimeField value={this.state.cutsItemUpdate[trackIndex].pace} style={{width: 50}} onChange={this.onPaceChange}  />\n\n              </div>\n          </div>\n\n      )\n  }\n}\n\n\n\nexport default Track\n","import React, { Component } from 'react'\nimport { Slider, Rail, Handles, Tracks, Ticks} from 'react-compound-slider'\nimport Track from './Track'\nimport TimeField from 'react-simple-timefield'\nimport TimeFormat from 'hh-mm-ss'\n\n\nconst sliderStyle = {  // Give the slider some width\n    position: 'relative',\n    width: '100%',\n    height: 80,\n    border: '1px solid steelblue',\n};\n\nconst railStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: 10,\n    marginTop: 35,\n    borderRadius: 5,\n    backgroundColor: '#8B9CB6',\n};\n\n\nexport function Handle({\n                           handle: { id, value, percent },\n                           getHandleProps\n                       }) {\n    return (\n        <div\n            style={{\n                left: `${percent}%`,\n                position: 'absolute',\n                marginLeft: -15,\n                marginTop: 25,\n                zIndex: 2,\n                width: 30,\n                height: 30,\n                border: 0,\n                textAlign: 'center',\n                cursor: 'pointer',\n                borderRadius: '50%',\n                backgroundColor: '#2C4870',\n                color: '#333',\n            }}\n            {...getHandleProps(id)}\n        >\n            <div style={{ fontFamily: 'Roboto', fontSize: 11, marginTop: -35 }}>\n                {value.toFixed(2)}\n            </div>\n\n        </div>\n\n\n    )\n}\n\nfunction Pace(distance, formatTime, cut) {\n    if(distance>0) {\n        return (\n            TimeFormat.fromS(formatTime/distance)\n        )\n    }\n\n}\n\n\n\nfunction Tick({ tick, count }) {  // your own tick component\n    return (\n        <div>\n            <div\n                style={{\n                    position: 'absolute',\n                    marginTop: 52,\n                    marginLeft: -0.5,\n                    width: 1,\n                    height: 8,\n                    backgroundColor: 'silver',\n                    left: `${tick.percent}%`,\n                }}\n            />\n            <div\n                style={{\n                    position: 'absolute',\n                    marginTop: 60,\n                    fontSize: 10,\n                    textAlign: 'center',\n                    marginLeft: `${-(100 / count) / 2}%`,\n                    width: `${100 / count}%`,\n                    left: `${tick.percent}%`,\n                }}\n            >\n                {tick.value}\n            </div>\n        </div>\n    )\n}\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            distance: 10,\n            time: '00:40:00',\n            pace: '00:00',\n            cutsCount: 2,\n            distanceCuts: [1],\n            cutChanged: '',\n            cuts: [],\n            newTracks: [],\n            newTimeSec: 0,\n            newCutTimeSec:0,\n            isChangedTime: 0,\n            isChangedPaceProp: 0,\n\n        };\n\n\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.onTimeChange = this.onTimeChange.bind(this);\n        this.onCutsChange = this.onCutsChange.bind(this);\n\n        this.onCutPaceChange = this.onCutPaceChange.bind(this);\n        this.onCutMove = this.onCutMove.bind(this);\n    }\n\n\n    onCutPaceChange = (cutChanged, trackPace, cutTime, isChangedPaceProp) => {\n        const updatedCutsArray = [...this.state.cuts];\n\n        updatedCutsArray[cutChanged] = {\n            pace: trackPace,\n            cuttime: cutTime,\n        };\n\n        this.state.cuts= updatedCutsArray;\n\n        for (let i=0; i<this.state.cuts.length; i++) {\n            this.state.newTimeSec+=parseInt(this.state.cuts[i].cuttime);\n        }\n\n        this.state.time=TimeFormat.fromS(this.state.newTimeSec, 'hh:mm:ss');\n        this.setState({newTimeSec:0});\n        this.state.isChangedPaceProp=isChangedPaceProp;\n    }\n\n    onCutMove = () => {\n\n        for (let i=0; i<this.state.cuts.length; i++) {\n            this.state.newCutTimeSec+=parseInt(this.state.cuts[i].cuttime);\n        }\n\n        this.state.time=TimeFormat.fromS(this.state.newCutTimeSec, 'hh:mm:ss');\n        this.setState({newCutTimeSec:0});\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: parseFloat(value)\n        });\n    }\n    onTimeChange(time) {\n        this.setState({time});\n        Pace(this.state.distance, TimeFormat.toS(this.state.time));\n        this.setState({isChangedTime: 1});\n    }\n\n\n    onCutsChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        const arrayCuts = [];\n\n        if(parseInt(value)>0) {\n\n            for(let i=1; i<parseInt(value);i++) {\n                arrayCuts.push(i);\n            }\n        }\n        this.setState({\n            [name]: parseInt(value),\n            distanceCuts: arrayCuts\n        });\n\n\n    }\n\n    updateChangeTime = (value) => {\n        this.state.isChangedTime =value;\n    }\n\n\n\n\n\n\n    render() {\n\n        //const {time} = this.state;\n        const pace = Pace(this.state.distance, TimeFormat.toS(this.state.time));\n        const cutsItem = [];\n        this.state.cuts= cutsItem;\n        this.state.pace= pace;\n\n\n\n         return (\n            <div style={{ height: 120, width: '80%', marginTop: '50px' }}>\n                <Slider\n                    rootStyle={sliderStyle}\n                    domain={[0, this.state.distance]}\n                    step={0.1}\n                    mode={2}\n                    values={this.state.distanceCuts}\n                    onSlideEnd={this.onCutMove}\n                >\n                    <Rail>\n                        {({ getRailProps }) => (\n                            <div style={railStyle} {...getRailProps()} />\n                        )}\n                    </Rail>\n                    <Handles>\n                        {({ handles, getHandleProps }) => (\n                            <div className=\"slider-handles\">\n                                {handles.map(handle => (\n                                    <Handle\n                                        key={handle.id}\n                                        handle={handle}\n                                        getHandleProps={getHandleProps}\n                                    />\n                                ))}\n                            </div>\n                        )}\n                    </Handles>\n                    {/*<Tracks left={false} right={false}>*/}\n                    <Tracks>\n                        {({ tracks, getTrackProps }) => (\n                            <div className=\"slider-tracks\">\n                                {tracks.map(({ id, source, target }, index) => (\n\n\n                                    <Track\n                                        key = {id}\n                                        source={source}\n                                        target={target}\n                                        getTrackProps={getTrackProps}\n                                        distance = {this.state.distance}\n                                        formatTime = {TimeFormat.toS(this.state.time)}\n                                        pace={pace}\n                                        onCutPaceChange={this.onCutPaceChange}\n                                        cutsItem = {cutsItem}\n                                        cuts = {this.state.cuts}\n                                        cutsCount={this.state.cutsCount}\n                                        trackIndex={index}\n                                        isChangedTime={this.state.isChangedTime}\n                                        isChangedPaceProp={this.state.isChangedPaceProp}\n                                        updateChangeTime = {this.updateChangeTime}\n                                        onCutMove={this.onCutMove}\n                                    />\n                                )) }\n\n                            </div>\n\n                        )}\n                    </Tracks>\n                    <Ticks count={this.state.distance}>\n                        {({ ticks }) => (\n                            <div className=\"slider-ticks\">\n                                {ticks.map(tick => (\n                                    <Tick key={tick.id} tick={tick} count={ticks.length} />\n                                ))}\n                            </div>\n                        )}\n                    </Ticks>\n                </Slider>\n                <div>\n                    <form>\n                        <label>\n                            Дистанция:\n                            <input name=\"distance\" type=\"number\" style={{width: 100}} value={this.state.distance} onChange={this.handleInputChange} />\n                        </label>\n                        <br />\n                        <label>\n                            Целевое время:\n                            <TimeField value={this.state.time} showSeconds={true} style={{width: 100}} onChange={this.onTimeChange}  />\n                        </label>\n                        <br />\n                        <label>\n                            Средний темп: {pace}\n\n                        </label>\n                        <br />\n                        <label>\n                            Количество отрезков:\n                            <input name=\"cutsCount\" type=\"number\" style={{width: 100}} value={this.state.cutsCount} onChange={this.onCutsChange} min={1} />\n                        </label>\n\n\n                    </form>\n\n                </div>\n\n            </div>\n        )\n\n    }\n}\n\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}