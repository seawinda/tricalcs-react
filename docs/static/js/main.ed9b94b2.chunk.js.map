{"version":3,"sources":["components/run/Track.jsx","components/run/Run.jsx","components/header.jsx","components/footer.jsx","index.js"],"names":["Track","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","trackPace","constPace","cutPart","cutTime","trackId","cutsItemUpdate","isChangedPace","onPaceChange","bind","assertThisInitialized","TimeFormat","toS","distance","cutChanged","setState","pace","cuttime","onCutPaceChange","_this$props","id","getTrackProps","source","target","_this$props$cutsItem","cutsItem","trackIndex","isChangedPaceProp","isChangedTime","cuts","paceConst","percent","updateChangeTime","react_default","a","createElement","key","data-pace","data-cuttime","data-id","assign","className","style","left","concat","width","react_simple_timefield_default","value","onChange","Component","Handle","_ref","_ref$handle","handle","getHandleProps","toFixed","Pace","formatTime","cut","fromS","parseFloat","Tick","_ref2","tick","count","position","marginTop","marginLeft","height","backgroundColor","fontSize","textAlign","Run","updatedCutsArray","toConsumableArray","i","length","newTimeSec","Number","time","onCutMove","newCutTimeSec","distanceInput","cutsCount","distanceCuts","newTracks","onDistanceChange","onTimeChange","onCutsChange","event","type","checked","name","defineProperty","_this$setState2","arrayCuts","push","_this2","es","domain","step","mode","values","onSlideEnd","_ref3","getRailProps","_ref4","handles","map","_ref5","tracks","_ref6","index","run_Track","_ref7","ticks","showSeconds","min","Header","href","index_es","icon","faFacebookF","size","faInstagram","Footer","ReactDOM","render","run_Run","document","getElementById","header","footer"],"mappings":"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","file":"static/js/main.ed9b94b2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport TimeField from 'react-simple-timefield'\nimport TimeFormat from \"hh-mm-ss\";\n\n\n\nclass Track extends Component {\n\n    constructor(props) {\n        super();\n\n\n        this.state = {\n            trackPace: \"00:00\",\n            constPace: \"00:00\",\n            cutPart: 0,\n            cutTime: 0,\n            trackId: '',\n            cutsItemUpdate: [],\n            isChangedPace: 0,\n        };\n        this.onPaceChange = this.onPaceChange.bind(this);\n    }\n\n    onPaceChange(trackPace) {\n\n        if((TimeFormat.toS(trackPace)>0)&&(this.props.distance>0)){\n            let cutChanged = this.state.trackId;\n            let cutTime = TimeFormat.toS(trackPace)*(this.state.cutPart)*this.props.distance;\n            this.setState({trackPace});\n            this.setState({cutTime});\n            this.setState({isChangedPace: 1});\n            let isChangedPaceProp = 1;\n\n            this.state.cutsItemUpdate[cutChanged] = ({\n                pace: trackPace,\n                cuttime: cutTime,\n            });\n            this.props.onCutPaceChange(cutChanged, trackPace, cutTime, isChangedPaceProp);\n\n        }\n    }\n\n\n\n  render() {\n\n      const {\n\n          props: {\n              id,\n              getTrackProps,\n              source,\n              pace,\n              target,\n              cutsItem = [],\n              trackIndex,\n            isChangedPaceProp,\n            isChangedTime,\n            cuts,\n            distance\n          },\n\n      } = this;\n\n\n      const paceConst = this.state.constPace;\n      this.state.trackId = trackIndex;\n      this.state.cutPart = (target.percent - source.percent)/100;\n      this.state.cutsItemUpdate=cuts;\n      if(distance>0) {\n          if(isChangedTime===1||isChangedPaceProp===0) {\n              this.state.constPace = pace;\n              this.state.cutTime = TimeFormat.toS(this.state.constPace) * (this.state.cutPart) * distance;\n              this.state.cutsItemUpdate[trackIndex] = ({\n                  pace: this.state.constPace,\n                  cuttime: this.state.cutTime,\n              });\n\n          } else if(isChangedPaceProp===1&&this.state.isChangedPace===0&&isChangedTime===0) {\n              this.state.cutTime = TimeFormat.toS(this.state.constPace) * (this.state.cutPart) * distance;\n              this.state.cutsItemUpdate[trackIndex] = ({\n                  pace: paceConst,\n                  cuttime: this.state.cutTime,\n              });\n              this.props.updateChangeTime(0);\n          } else if(isChangedPaceProp===1&&this.state.isChangedPace===1&&isChangedTime===0) {\n              this.state.cutTime = TimeFormat.toS(this.state.trackPace)*(this.state.cutPart)*distance;\n              this.state.cutsItemUpdate[trackIndex] = ({\n                  pace: this.state.trackPace,\n                  cuttime: this.state.cutTime,\n              });\n          }\n          cutsItem[trackIndex] = this.state.cutsItemUpdate[trackIndex];\n          this.props.updateChangeTime(0);\n      }\n      return (\n          <div key={id} data-pace={this.state.cutsItemUpdate[trackIndex].pace} data-cuttime={this.state.cutsItemUpdate[trackIndex].cuttime} data-id={trackIndex}>\n              <div className={'slide-handle__track'}\n                  style={{\n\n                      left: `${source.percent}%`,\n                      width: `${target.percent - source.percent}%`,\n                  }}\n                  {...getTrackProps()} // this will set up events if you want it to be clickeable (optional)\n              >\n\n\n              </div>\n              <div className={'slide-handle__pace'} style={{ left: `${source.percent+1}%` }} >\n\n                  <TimeField  className={'slide-handle__input'} value={this.state.cutsItemUpdate[trackIndex].pace} onChange={this.onPaceChange}  />\n\n              </div>\n          </div>\n\n      )\n  }\n}\n\n\n\nexport default Track\n","import React, { Component } from 'react'\nimport { Slider, Rail, Handles, Tracks, Ticks} from 'react-compound-slider'\nimport Track from './Track'\nimport TimeField from 'react-simple-timefield'\nimport TimeFormat from 'hh-mm-ss'\n\n\n\n\nexport function Handle({\n                           handle: { id, value, percent },\n                           getHandleProps\n                       }) {\n    return (\n        <div className={'slider-handles__item'}\n            style={{\n                left: `${percent}%`,\n\n            }}\n            {...getHandleProps(id)}\n        >\n            <div className={'slider-handles__length'}>\n                {value.toFixed(2)}&nbsp;км\n            </div>\n\n        </div>\n\n\n    )\n}\n\nfunction Pace(distance, formatTime, cut) {\n    if(distance>0) {\n        return (\n            TimeFormat.fromS(formatTime/parseFloat(distance))\n        )\n    }\n\n}\n\n\n\nfunction Tick({ tick, count }) {  // your own tick component\n    return (\n        <div>\n            <div\n                style={{\n                    position: 'absolute',\n                    marginTop: 52,\n                    marginLeft: -0.5,\n                    width: 1,\n                    height: 8,\n                    backgroundColor: 'silver',\n                    left: `${tick.percent}%`,\n                }}\n            />\n            <div\n                style={{\n                    position: 'absolute',\n                    marginTop: 60,\n                    fontSize: 10,\n                    textAlign: 'center',\n                    marginLeft: `${-(100 / count) / 2}%`,\n                    width: `${100 / count}%`,\n                    left: `${tick.percent}%`,\n                }}\n            >\n                {tick.value}\n            </div>\n        </div>\n    )\n}\n\n\nclass Run extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            distance: 10,\n            distanceInput: 10,\n            time: '00:40:00',\n            pace: '00:00',\n            cutsCount: 2,\n            distanceCuts: [1],\n            cutChanged: '',\n            cuts: [],\n            newTracks: [],\n            newTimeSec: 0,\n            newCutTimeSec:0,\n            isChangedTime: 0,\n            isChangedPaceProp: 0,\n\n        };\n\n\n\n        this.onDistanceChange = this.onDistanceChange.bind(this);\n        this.onTimeChange = this.onTimeChange.bind(this);\n        this.onCutsChange = this.onCutsChange.bind(this);\n\n        this.onCutPaceChange = this.onCutPaceChange.bind(this);\n        this.onCutMove = this.onCutMove.bind(this);\n    }\n\n\n    onCutPaceChange = (cutChanged, trackPace, cutTime, isChangedPaceProp) => {\n        const updatedCutsArray = [...this.state.cuts];\n\n        updatedCutsArray[cutChanged] = {\n            pace: trackPace,\n            cuttime: cutTime,\n        };\n\n        this.state.cuts= updatedCutsArray;\n\n        for (let i=0; i<this.state.cuts.length; i++) {\n            this.state.newTimeSec+=Number(this.state.cuts[i].cuttime);\n        }\n\n        this.state.time=TimeFormat.fromS(this.state.newTimeSec, 'hh:mm:ss');\n        this.setState({newTimeSec:0});\n        this.state.isChangedPaceProp=isChangedPaceProp;\n    }\n\n    onCutMove = () => {\n\n        for (let i=0; i<this.state.cuts.length; i++) {\n            this.state.newCutTimeSec+=Number(this.state.cuts[i].cuttime);\n        }\n\n        this.state.time=TimeFormat.fromS(this.state.newCutTimeSec, 'hh:mm:ss');\n        this.setState({newCutTimeSec:0});\n    }\n\n    onDistanceChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n        if(value>0&&value<=300) {\n            this.setState({\n                distance: parseFloat(value)\n            });\n        }\n    }\n\n    onTimeChange(time) {\n        this.setState({time});\n        Pace(this.state.distance, TimeFormat.toS(this.state.time));\n        this.setState({isChangedTime: 1});\n    }\n\n\n    onCutsChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        const arrayCuts = [];\n\n        if(Number(value)>0) {\n\n            for(let i=1; i<Number(value);i++) {\n                arrayCuts.push(i);\n            }\n        }\n        this.setState({\n            [name]: Number(value),\n            distanceCuts: arrayCuts\n        });\n\n\n    }\n\n    updateChangeTime = (value) => {\n        this.state.isChangedTime =value;\n    }\n\n\n\n\n\n\n    render() {\n\n        //const {time} = this.state;\n        const pace = Pace(this.state.distance, TimeFormat.toS(this.state.time));\n        const cutsItem = [];\n        this.state.cuts= cutsItem;\n        this.state.pace= pace;\n\n\n\n         return (\n            <div>\n                <Slider\n                    domain={[0, this.state.distance]}\n                    step={0.01}\n                    mode={2}\n                    values={this.state.distanceCuts}\n                    onSlideEnd={this.onCutMove}\n                    className={'scale'}\n                >\n                    <Rail>\n                        {({ getRailProps }) => (\n                            <div className={'scale__rail'} {...getRailProps()} />\n                        )}\n                    </Rail>\n                    <Handles>\n                        {({ handles, getHandleProps }) => (\n                            <div className=\"slider-handles scale__handles\">\n                                {handles.map(handle => (\n                                    <Handle\n                                        key={handle.id}\n                                        handle={handle}\n                                        getHandleProps={getHandleProps}\n\n                                    />\n                                ))}\n                            </div>\n                        )}\n                    </Handles>\n                    {/*<Tracks left={false} right={false}>*/}\n                    <Tracks>\n                        {({ tracks, getTrackProps }) => (\n                            <div className=\"slider-tracks\">\n                                {tracks.map(({ id, source, target }, index) => (\n\n\n                                    <Track\n                                        key = {id}\n                                        source={source}\n                                        target={target}\n                                        getTrackProps={getTrackProps}\n                                        distance = {this.state.distance}\n                                        formatTime = {TimeFormat.toS(this.state.time)}\n                                        pace={pace}\n                                        onCutPaceChange={this.onCutPaceChange}\n                                        cutsItem = {cutsItem}\n                                        cuts = {this.state.cuts}\n                                        cutsCount={this.state.cutsCount}\n                                        trackIndex={index}\n                                        isChangedTime={this.state.isChangedTime}\n                                        isChangedPaceProp={this.state.isChangedPaceProp}\n                                        updateChangeTime = {this.updateChangeTime}\n                                        onCutMove={this.onCutMove}\n                                    />\n                                )) }\n\n                            </div>\n\n                        )}\n                    </Tracks>\n                    <Ticks count={this.state.distance}>\n                        {({ ticks }) => (\n                            <div className=\"slider-ticks\">\n                                {ticks.map(tick => (\n                                    <Tick key={tick.id} tick={tick} count={ticks.length} />\n                                ))}\n                            </div>\n                        )}\n                    </Ticks>\n                </Slider>\n                <div className={'scale-data'}>\n                    <form className={'scale-data__form'}>\n                        <label className={'scale-data__label'}>\n                            Дистанция (км):\n                            <input className={'scale-data__data'} name=\"distanceInput\" type=\"number\" value={this.state.distanceInput} onChange={this.onDistanceChange} />\n                        </label>\n                        <label className={'scale-data__label'}>\n                            Целевое время (чч:мм:сс):\n                            <TimeField className={'scale-data__data'} value={this.state.time} showSeconds={true} onChange={this.onTimeChange}  />\n                        </label>\n                        <label className={'scale-data__label'}>\n                            Средний темп (мин/км): <span className={'scale-data__data'}>{pace}</span>\n\n                        </label>\n                        <label className={'scale-data__label'}>\n                            Количество отрезков:\n                            <input className={'scale-data__data'} name=\"cutsCount\" type=\"number\" value={this.state.cutsCount} onChange={this.onCutsChange} min={1} />\n                        </label>\n\n\n                    </form>\n\n                </div>\n\n            </div>\n        )\n\n    }\n}\n\n\n\nexport default Run;\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faFacebookF } from '@fortawesome/free-brands-svg-icons'\n\n\n\n\n\n\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n\n        };\n\n\n    }\n\n\n\n    render() {\n\n\n\n         return (\n\n            <section className={'first-screen'}>\n                <div className={'header-top'}>\n                    <h1 className={'header-top__title'}>Триатлонные калькуляторы</h1>\n                    <div className=\"header__socials socials\"><a href={'https://www.facebook.com/seawinda'} className={'socials__link'} target={'_blank'}><FontAwesomeIcon icon={faFacebookF} size=\"2x\" /></a><a href={'https://www.instagram.com/seawinda/'} className={'socials__link'} target={'_blank'}><FontAwesomeIcon icon={faInstagram} size=\"2x\" /></a></div>\n\n                </div>\n\n\n\n            </section>\n        )\n\n    }\n}\n\n\n\nexport default Header;\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faFacebookF } from '@fortawesome/free-brands-svg-icons'\n\n\n\n\n\n\n\nclass Footer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n\n        };\n\n\n    }\n\n\n\n    render() {\n         return (\n\n            <section className={'footer__dev-info dev-info'}>\n                <div className=\"dev-info__text\">Разработано Сергеевой&nbsp;Еленой: </div>\n                <div className=\"dev-info__socials socials\"><a href={'https://www.facebook.com/seawinda'} className={'socials__link'} target={'_blank'}><FontAwesomeIcon icon={faFacebookF} size=\"2x\" /></a><a href={'https://www.instagram.com/seawinda/'} className={'socials__link'} target={'_blank'}><FontAwesomeIcon icon={faInstagram} size=\"2x\" /></a></div>\n            </section>\n        )\n\n    }\n}\n\n\n\nexport default Footer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Run from \"./components/run/Run\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\n\nimport \"./scss/style.scss\";\n\n\n\n\nReactDOM.render(<Run />, document.getElementById(\"run\"));\nReactDOM.render(<Header />, document.getElementById(\"header\"));\nReactDOM.render(<Footer />, document.getElementById(\"footer\"));\n"],"sourceRoot":""}