{"version":3,"sources":["components/App.jsx","index.js"],"names":["sliderStyle","position","width","height","border","railStyle","marginTop","borderRadius","backgroundColor","Handle","_ref","_ref$handle","handle","id","value","percent","getHandleProps","react_default","a","createElement","Object","assign","style","left","concat","marginLeft","zIndex","textAlign","cursor","color","fontFamily","fontSize","Track","_ref2","source","target","getTrackProps","Tick","_ref3","tick","count","App","es","rootStyle","domain","step","mode","values","_ref4","getRailProps","_ref5","handles","className","map","key","right","_ref6","tracks","_ref7","_ref8","ticks","length","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.7cb241d7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider'\n\nconst sliderStyle = {  // Give the slider some width\n    position: 'relative',\n    width: '100%',\n    height: 80,\n    border: '1px solid steelblue',\n};\n\nconst railStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: 10,\n    marginTop: 35,\n    borderRadius: 5,\n    backgroundColor: '#8B9CB6',\n};\n\nexport function Handle({ // your handle component\n                           handle: { id, value, percent },\n                           getHandleProps\n                       }) {\n    return (\n        <div\n            style={{\n                left: `${percent}%`,\n                position: 'absolute',\n                marginLeft: -15,\n                marginTop: 25,\n                zIndex: 2,\n                width: 30,\n                height: 30,\n                border: 0,\n                textAlign: 'center',\n                cursor: 'pointer',\n                borderRadius: '50%',\n                backgroundColor: '#2C4870',\n                color: '#333',\n            }}\n            {...getHandleProps(id)}\n        >\n            <div style={{ fontFamily: 'Roboto', fontSize: 11, marginTop: -35 }}>\n                {value}\n            </div>\n        </div>\n    )\n}\n\nfunction Track({ source, target, getTrackProps }) { // your own track component\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                height: 10,\n                zIndex: 1,\n                marginTop: 35,\n                backgroundColor: '#546C91',\n                borderRadius: 5,\n                cursor: 'pointer',\n                left: `${source.percent}%`,\n                width: `${target.percent - source.percent}%`,\n            }}\n            {...getTrackProps()} // this will set up events if you want it to be clickeable (optional)\n        />\n    )\n}\n\nfunction Tick({ tick, count }) {  // your own tick component\n    return (\n        <div>\n            <div\n                style={{\n                    position: 'absolute',\n                    marginTop: 52,\n                    marginLeft: -0.5,\n                    width: 1,\n                    height: 8,\n                    backgroundColor: 'silver',\n                    left: `${tick.percent}%`,\n                }}\n            />\n            <div\n                style={{\n                    position: 'absolute',\n                    marginTop: 60,\n                    fontSize: 10,\n                    textAlign: 'center',\n                    marginLeft: `${-(100 / count) / 2}%`,\n                    width: `${100 / count}%`,\n                    left: `${tick.percent}%`,\n                }}\n            >\n                {tick.value}\n            </div>\n        </div>\n    )\n}\n\n\nclass App extends Component {\n    render() {\n         return (\n            <div style={{ height: 120, width: '100%', marginTop: '50px' }}>\n                <Slider\n                    rootStyle={sliderStyle}\n                    domain={[0, 100]}\n                    step={1}\n                    mode={2}\n                    values={[20, 60, 80, 85]}\n                >\n                    <Rail>\n                        {({ getRailProps }) => (\n                            <div style={railStyle} {...getRailProps()} />\n                        )}\n                    </Rail>\n                    <Handles>\n                        {({ handles, getHandleProps }) => (\n                            <div className=\"slider-handles\">\n                                {handles.map(handle => (\n                                    <Handle\n                                        key={handle.id}\n                                        handle={handle}\n                                        getHandleProps={getHandleProps}\n                                    />\n                                ))}\n                            </div>\n                        )}\n                    </Handles>\n                    <Tracks left={false} right={false}>\n                        {({ tracks, getTrackProps }) => (\n                            <div className=\"slider-tracks\">\n                                {tracks.map(({ id, source, target }) => (\n                                    <Track\n                                        key={id}\n                                        source={source}\n                                        target={target}\n                                        getTrackProps={getTrackProps}\n                                    />\n                                ))}\n                            </div>\n                        )}\n                    </Tracks>\n                    <Ticks count={15}>\n                        {({ ticks }) => (\n                            <div className=\"slider-ticks\">\n                                {ticks.map(tick => (\n                                    <Tick key={tick.id} tick={tick} count={ticks.length} />\n                                ))}\n                            </div>\n                        )}\n                    </Ticks>\n                </Slider>\n            </div>\n        )\n    }\n}\n\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}